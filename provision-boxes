#!/bin/bash
set -u -e -E -C -o pipefail

SCRIPT=$(basename $0)
PUBLIC_KEY=cache/$USER.pub
#IMAGE_URL="http://developer.nrel.gov/downloads/vagrant-boxes/CentOS-6.4-x86_64-v20130309.box"
#IMAGE_FILENAME=cache/$(basename $IMAGE_URL)
IMAGE_URL=__nyd__
IMAGE_FILENAME=cache/centos64-x86_64.box
NET_PREFIX_FILE=net-prefix
LOG_FILE=$(pwd)/logs/$SCRIPT.log
RES_DIR=$(pwd)/res
BOXES_DIR=$(pwd)/boxes
REPO_DIR=$(pwd)/repo


usage() {
    local EXIT_CODE=${1:-0}
    echo
    echo "usage: $SCRIPT"
    echo
    exit $EXIT_CODE
}

if [[ $(id -u) == 0 ]]; then
    echo
    echo "root must not run this script directly"
    echo
    usage 1
fi

mkdir -p tmp cache logs

if [[ ! -r $PUBLIC_KEY ]]; then
    echo
    echo "your public key $PUBLIC_KEY cannot be found; consider using"
    echo
    echo "    ssh-add -L > $PUBLIC_KEY"
    echo
    usage 1
fi

if [[ ! -e $IMAGE_FILENAME ]]; then
    curl --retry 3 -# -o $IMAGE_FILENAME $IMAGE_URL
fi

if [[ ! -e $NET_PREFIX_FILE ]]; then
    echo
    echo "net prefix not defined; for example use"
    echo
    echo "    echo 192.168.33 > $NET_PREFIX_FILE"
    echo
    usage 1
fi
NET_PREFIX=$(cat $NET_PREFIX_FILE)

cat <<SUMMARY

-- creating boxes with the following settings:
            user: $USER
      public key: $PUBLIC_KEY
       box image: $IMAGE_FILENAME
      net prefix: $NET_PREFIX
        repo dir: $REPO_DIR

SUMMARY

PUBLIC_KEY=$(readlink -e $PUBLIC_KEY)
IMAGE_FILENAME=$(readlink -e $IMAGE_FILENAME)

get_free_ip() {
    for i in $(seq 100 199); do
        test_ip=$NET_PREFIX.$i
        for used_ip in $(cat $BOXES_DIR/*/ip 2> /dev/null); do
            [[ $test_ip == $used_ip ]] && continue 2
        done
        echo $test_ip
        break
    done
}

echo "-- initializing boxes"
BOX_FOUND=
for BOXDIR in boxes/*; do
    BOX_FOUND=yes
    BOXNAME=$(basename $BOXDIR)
    echo "---- box $BOXNAME found"

    if [[ ! -e $BOXDIR/Vagrantfile ]]; then
        echo "------ initializing $BOXNAME"
        (
            cd $BOXDIR
            vagrant init box $IMAGE_FILENAME >> $LOG_FILE
            mv Vagrantfile Vagrantfile.orig

            if [[ ! -e role ]]; then
                ROLE=yadtclient
                echo "------ no role definition found, assuming '$ROLE'"
                echo $ROLE > role
            else
                ROLE=$(cat role)
                echo "------ configuring role '$ROLE'"
            fi

            IP=$(get_free_ip)
            echo "------ assigning ip $IP"
            rm -f ip && echo $IP > ip
            cat << VAGRANTFILE > Vagrantfile
Vagrant.configure("2") do |config|
  config.vm.box = "box"
  config.vm.box_url = "$IMAGE_URL"
  config.vm.network :private_network, ip: "$IP"
  config.vm.hostname = "$BOXNAME"
  config.vm.synced_folder "$REPO_DIR", "/repo"
  config.vm.provision :shell, :path => "provision-box", :args => "$ROLE"
end
VAGRANTFILE
        )
    fi

    echo "------ adding public key and some base files"
    cp $PUBLIC_KEY $BOXDIR/
    cp -r $RES_DIR/* $BOXDIR/
done

if [[ -z $BOX_FOUND ]]; then
    echo
    echo "no dirs found under boxes/"
    echo "consider running"
    echo
    echo "    mkdir boxes/myfirstbox"
    echo
    echo "then rerun $SCRIPT"
    exit 0
fi

echo
echo "-- configuring hostname resolution"
echo "---- removing all old host/ip mappings with network $NET_PREFIX"
TMP_HOSTS=tmp/hosts
rm -f $TMP_HOSTS && sed "/$NET_PREFIX/d" /etc/hosts > $TMP_HOSTS

echo "---- adding boxes to /etc/hosts"
for BOXDIR in boxes/*; do
    [[ -d $BOXDIR ]] || continue
    IP=$(cat $BOXDIR/ip)
    BOXNAME=$(basename $BOXDIR)
    echo "------ adding mapping $BOXNAME - $IP"
    sed -i "$ a $IP\t$BOXNAME\t\# auto-added by $SCRIPT" $TMP_HOSTS
done

if ! diff tmp/hosts /etc/hosts > /dev/null; then
    sudo -p "---- installing modified /etc/hosts, superuser role required: " cp tmp/hosts /etc/hosts
fi

# should be moved to a dedicated yadtshell box lateron
echo
echo "-- generating yadt target file"
rm -f target && echo "hosts:" > target
for BOXDIR in boxes/*; do
    BOX_NAME=`basename $BOXDIR`
    echo "---- adding $BOX_NAME to target"
    echo "- $BOX_NAME">> target
done

echo
echo "-- starting boxes"
for BOXDIR in boxes/*; do
    [[ -d $BOXDIR ]] || continue
    IP=$(cat $BOXDIR/ip)
    BOXNAME=$(basename $BOXDIR)
    echo "---- starting $BOXNAME (this may take a few minutes)"
    (
        cd $BOXDIR
        vagrant up
    )
done
